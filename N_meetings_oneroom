
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

struct meeting {
    int start;
    int end;
    int pos;
};

class Solution {
public:
    static bool comparator(const meeting &m1, const meeting &m2) {
        if (m1.end < m2.end) return true;
        else if (m1.end > m2.end) return false;
        else if (m1.pos < m2.pos) return true;
        return false;
    }

    int maxMeetings(int start[], int end[], int n) {
        vector<meeting> meet(n);
        for (int i = 0; i < n; i++) {
            meet[i].start = start[i];
            meet[i].end = end[i];
            meet[i].pos = i + 1;
        }

        sort(meet.begin(), meet.end(), comparator);

        vector<int> answer;

        int limit = meet[0].end;
        answer.push_back(meet[0].pos);

        for (int i = 1; i < n; i++) {
            if (meet[i].start > limit) {
                limit = meet[i].end;
                answer.push_back(meet[i].pos);
            }
        }

        // Output the number of meetings that can be performed
        return answer.size();
    }
};
